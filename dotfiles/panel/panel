#!/bin/sh

PANEL_FIFO=/tmp/panel-fifo

export SCRIPT_DIR=$(dirname $0)
. $SCRIPT_DIR/panel_vars

## Kill children processes when exiting, former line would bring down X with it,
## this is because the process group was part of X. Using pkill -P kills the
## children of the process id
# trap 'trap - SIGTERM; kill 0' INT TERM QUIT EXIT
trap 'trap - TERM; pkill -TERM -P $$' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

$SCRIPT_DIR/panel_bar < "$PANEL_FIFO" | lemonbar -b -g x40 -o 0 -f monospace-12 -o -4 -f "FontAwesome-12" -B "$(xgetresource panel.background)" -U "#f00" -F "$(xgetresource panel.foreground)" | sh &

## Debugging:
# ./panel_bar < "$PANEL_FIFO" | cat &
# cat < "$PANEL_FIFO" &

do_while() {
	eval "$2"
	while sleep "$1"; do
		eval "$2"
	done
}

xtitle -sf 'T%s\n' > "$PANEL_FIFO" &
while true; do bspc subscribe report; sleep 1; done > "$PANEL_FIFO" &
clock -f "D%a %d %b %T" -si 1 > "$PANEL_FIFO" &
battery -sf "BS%s
BC%i" > $PANEL_FIFO &
essid -f "X%s" -sw wlp58s0 > "$PANEL_FIFO" &

volume(){
	amixer -M get Master | sed -n 's/^.*\[\([0-9]\+%\).*$/\1/p'
}

muted(){
	amixer -M get Master | sed -n 's/^.*\[\(on\|off\)\].*$/\1/p'
}

# alsactl monitor only pushes when there's a change (no initial)
printf "VL%s\nVM%s\n" "$(volume)" "$(muted)" > "$PANEL_FIFO"

# alsactl does weird line buffering, ugh
stdbuf -oL -eL alsactl monitor |
    while IFS= read -r line
    do
	printf "VL%s\nVM%s\n" "$(volume)" "$(muted)"
    done > "$PANEL_FIFO" &

do_while 5 'printf "V%s\n" "$(volume)"' > "$PANEL_FIFO" &

# TODO: Debug krypt-n/bar not updating without a short sleep between updates.
# Short demo:
#  echo "foo\nbar" | lemonbar -p
# The above example results in a bar with just "foo"
# This may apply to origin. Workaround for now is to create an override REFRESH command for the panel
sleep 0.05;
printf "%s\n" "Refresh" > "$PANEL_FIFO"

wait
